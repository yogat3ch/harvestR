% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_table.R
\name{get_table}
\alias{get_table}
\title{Harvest API v2 get request wrapper}
\usage{
get_table(
  table = NULL,
  user = harvestR::get_harvest_account(),
  key = harvestR::get_harvest_pat(),
  query = NULL,
  plan_options = NULL,
  quiet = T,
  ...,
  auto_retry = lifecycle::deprecated(),
  email = lifecycle::deprecated(),
  verbose = lifecycle::deprecated(),
  strategy = lifecycle::deprecated()
)
}
\arguments{
\item{table}{Character table name to be submitted to the Harvest API v2. Refer to \href{https://help.getharvest.com/api-v2}{Harvest API v2}.}

\item{user}{Character account number (e.g. user = '12345') for authentication. Register at \href{https://id.getharvest.com/developers}{Harvest Developers}. Defaults to \code{get_harvest_account()}}

\item{key}{Character key (e.g. key = 'Bearer \link{secret key}') for API authentication. Register at \href{https://id.getharvest.com/developers}{Harvest Developers}. Defaults to \code{get_harvest_pat()}}

\item{plan_options}{List; list of parameters passed to \code{future::plan}. The strategy parameter is required to implement parallel requests, see \href{https://cran.r-project.org/web/packages/future/vignettes/future-1-overview.html}{Future Package Overview} for more details.}

\item{quiet}{Logical; controls harvestR messaging, TRUE returns only errors in the console and FALSE returns messages, warnings, and errors. Does not impact deprecation warnings.}

\item{...}{Additional arguments forwarded to \link[httr]{RETRY} and \link[httr]{config}. Refer to details for more information.}
}
\value{
dataframe with contents of requested Harvest table
}
\description{
Submits get requests to the Harvest API v2 with options configured for authentication, parallelism, and logging
}
\details{
\lifecycle{maturing}

Description of ... parameters. Additional arguments are forwarded to config.
\itemize{
\item \code{times} integer; Forwarded to RETRY, maximum number of requests to attempt. Defaults to 3.
\item \code{token} httr-token; Forwarded to config, an OAuth token (1.0 or 2.0).
}
}
\examples{
\dontrun{

# Create a credentials record on the system keyring
create_harvest_creds()

# Set the credentials in the environment for get_table
set_harvest_creds()

# Barebones call to get_table
projects <- get_table(table = 'projects')

# Parallel request with 2 retries and messaging
# Windows users should use multisession, multicore will not work
time_entries <- get_table(table = 'time_entries',
query = list(from = '2018-01-01', to = '2018-12-31'),
plan_options = list(strategy = "multicore"),
times = 2,
quiet = F)

# Request using an httr option (see `httr::httr_options()`) and an oauth token
projects <- get_table(table = 'projects',
http_version = 2,
token = my_token)

}

}
\references{
\href{https://help.getharvest.com/api-v2}{Harvest API v2}
\href{https://id.getharvest.com/developers}{Harvest Developers Page},
\href{https://cran.r-project.org/web/packages/future/vignettes/future-1-overview.html}{Future Pacakge Overview},
\href{https://cran.r-project.org/web/packages/future/vignettes/future-2-output.html}{Future Package Output}
}
\seealso{
\code{future::plan()} for more detail regarding how to implement parallel api calls

\code{httr::httr_options()} for more detail regarding httr configurations
}
